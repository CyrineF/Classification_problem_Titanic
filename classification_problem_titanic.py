# -*- coding: utf-8 -*-
"""Classification problem_Titanic.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sWiLKE2ZxUPEFdRcYJrqWnU2agCHEJi2
"""

from google.colab import drive
drive.mount('/content/drive')

!pip install xlrd==2.0.0

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import sklearn

data = pd.read_excel('/content/drive/MyDrive/titanic3.xls')

data.head()

data.describe()

data.columns

data = data.drop(['name','sibsp', 'parch', 'ticket',
       'fare', 'cabin', 'embarked', 'boat', 'body', 'home.dest'], axis=1)

data = data.dropna(axis=0)

data.head()

data.columns

data['sex'].replace(['male', 'female'], [1,2], inplace=True)

y = data['survived']

x = data.drop('survived', axis = 1)

from sklearn.neighbors import KNeighborsClassifier

def training(n,x,y):
  model = KNeighborsClassifier(n_neighbors=n)
  model.fit(x,y)
  m = model.score(x,y)
  return m

def best_n_neighbors(x,y):
  best_score = 0
  best_neighbors = 0
  for i in range(1,11) :
    score = training(i,x,y)
    if score > best_score :
      best_neighbors = i
      best_score = score
  return(best_neighbors, best_score)

t = best_n_neighbors(x,y)

print("best_n_neighbors = {} with score = {}".format(t[0],t[1]))

def prediction(model,pclass, sex, age) :
  passenger = np.array([pclass, sex, age]).reshape(1,3)
  print(model.predict(passenger))
  print(model.predict_proba(passenger))

n = t[0]
model = KNeighborsClassifier(n_neighbors=n)
model.fit(x,y)
prediction(model, 3, 2, 25)

